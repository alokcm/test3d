{"version":3,"sources":["file:///Users/Alok/Cocos%203D/HelloWorld3D/assets/scripts/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","CCInteger","instantiate","Vec3","PlayerController","ccclass","property","BlockType","GameState","GameManager","type","GS_INIT","start","_curState","generateRoad","playCtrl","setInputActive","node","setPosition","ZERO","on","onPlayerJumpEnd","moveIndex","checkResult","curState","value","init","GS_PLAYING","startMenu","active","setTimeout","removeAllChildren","_road","push","BT_STONE","i","maxRoads","BT_NONE","Math","floor","random","j","block","cubePrefab","addChild","onStartButtonClicked"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Prefab, CCInteger, instantiate, Game, Vec3 } from 'cc';\r\nimport { PlayerController } from './PlayerController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = GameManager\r\n * DateTime = Thu Dec 09 2021 15:23:54 GMT+0530 (India Standard Time)\r\n * Author = alokraj0024\r\n * FileBasename = GameManager.ts\r\n * FileBasenameNoExtension = GameManager\r\n * URL = db://assets/scripts/GameManager.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n \r\n\r\nenum BlockType{\r\n    BT_NONE,\r\n    BT_STONE,\r\n}\r\n\r\nenum GameState{\r\n    GS_INIT,\r\n    GS_PLAYING,\r\n    GS_END,\r\n}\r\n\r\n@ccclass('GameManager')\r\nexport class GameManager extends Component {\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n\r\n    @property({type : Prefab})\r\n    public cubePrefab : Prefab|null = null;\r\n    @property({type : CCInteger})\r\n    public maxRoads : Number = 50;\r\n    @property({type : PlayerController})\r\n    public playCtrl : PlayerController = null;\r\n    @property({type : Node})\r\n    public startMenu : Node = null;\r\n\r\n    private _road : number[] = [];\r\n    private _curState: GameState = GameState.GS_INIT;\r\n\r\n    start () {\r\n        // [3]\r\n\r\n        this._curState = GameState.GS_INIT;\r\n\r\n        this.generateRoad();\r\n\r\n        if(this.playCtrl)\r\n        {\r\n            this.playCtrl.setInputActive(false);\r\n            this.playCtrl.node.setPosition(Vec3.ZERO);\r\n        }\r\n\r\n        this.playCtrl?.node.on('JumpEnd', this.onPlayerJumpEnd, this);\r\n    }\r\n\r\n\r\n    onPlayerJumpEnd(moveIndex: number) {\r\n        this.checkResult(moveIndex);\r\n    }\r\n    set curState (value: GameState) {\r\n        switch(value)\r\n        {\r\n            case GameState.GS_INIT:\r\n                this.init();\r\n                break;\r\n            case GameState.GS_PLAYING:\r\n                if(this.startMenu)\r\n                    this.startMenu.active = false;\r\n                \r\n                    setTimeout(() => {\r\n                        if(this.playCtrl)\r\n                            this.playCtrl.setInputActive(true);\r\n                    },0.1);\r\n                break;\r\n        }\r\n        this.curState = value;\r\n    }\r\n\r\n    init() {\r\n        if(this.startMenu)\r\n            this.startMenu.active = true;\r\n    }\r\n    \r\n    generateRoad() {\r\n        this.node.removeAllChildren();\r\n        this._road = [];\r\n        this._road.push(BlockType.BT_STONE);\r\n\r\n        for(let i = 1;i< this.maxRoads;i++)\r\n        {\r\n            if(this._road[i-1] === BlockType.BT_NONE)\r\n                this._road.push(BlockType.BT_STONE);\r\n            else\r\n                this._road.push(Math.floor(Math.random() * 2));\r\n        }\r\n\r\n        for(let j = 0;j<this.maxRoads;j++)\r\n        {\r\n            if(this._road[j])\r\n            {\r\n                let block = instantiate(this.cubePrefab);\r\n                this.node.addChild(block);\r\n                block.setPosition(j,-1.5,0);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    onStartButtonClicked() {\r\n        this.curState = GameState.GS_PLAYING;\r\n    }\r\n\r\n    checkResult(moveIndex: number) {\r\n        if (moveIndex <= this.maxRoads) {\r\n            // Jump to the empty square\r\n            if (this._road[moveIndex] == BlockType.BT_NONE)\r\n                this.curState = GameState.GS_INIT;\r\n        }\r\n        else\r\n            this.curState = GameState.GS_INIT;  // skipped the maximum length\r\n    }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}